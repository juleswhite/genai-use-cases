---
export interface Document {
  name: string;
  type: 'pdf' | 'docx' | 'xlsx' | 'csv' | 'txt' | 'pptx';
  size?: string;
}

export interface Props {
  message: string;
  sender: 'user' | 'ai';
  timestamp?: string;
  avatar?: string;
  documents?: Document[];
}

const { message, sender, timestamp, avatar, documents } = Astro.props;
const isUser = sender === 'user';

// Function to get icon for document type
function getDocumentIcon(type: string) {
  switch (type) {
    case 'pdf':
      return { icon: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8.5 7h7v1.5h-7V7zM8.5 10h7v1.5h-7V10zM8.5 13h4.5v1.5H8.5V13z', color: 'text-red-600 bg-red-50 border-red-200' };
    case 'docx':
      return { icon: 'M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zM14 8V3l5 5h-5z', color: 'text-blue-600 bg-blue-50 border-blue-200' };
    case 'xlsx':
      return { icon: 'M3 3v18h18V3H3zm16 16H5V5h14v14zM7 7h2v2H7V7zm0 4h2v2H7v-2zm0 4h2v2H7v-2zm4-8h2v2h-2V7zm0 4h2v2h-2v-2zm0 4h2v2h-2v-2zm4-8h2v2h-2V7zm0 4h2v2h-2v-2zm0 4h2v2h-2v-2z', color: 'text-green-600 bg-green-50 border-green-200' };
    case 'csv':
      return { icon: 'M3 3v18h18V3H3zm16 16H5V5h14v14zM7 7h10v2H7V7zm0 4h10v2H7v-2zm0 4h10v2H7v-2z', color: 'text-emerald-600 bg-emerald-50 border-emerald-200' };
    case 'pptx':
      return { icon: 'M6 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6H6zm8 7h-1V4l5 5h-4z', color: 'text-orange-600 bg-orange-50 border-orange-200' };
    case 'txt':
    default:
      return { icon: 'M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zM14 8V3l5 5h-5zM8 12h8v1H8v-1zm0 2h8v1H8v-1zm0 2h5v1H8v-1z', color: 'text-slate-600 bg-slate-50 border-slate-200' };
  }
}
---

<div class={`flex ${isUser ? 'justify-end' : 'justify-start'} mb-4`}>
  <div class={`flex items-end space-x-2 max-w-xs lg:max-w-md ${isUser ? 'flex-row-reverse space-x-reverse' : ''}`}>
    <!-- Avatar -->
    <div class={`flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center ${
      isUser 
        ? 'bg-blue-600' 
        : 'bg-gradient-to-br from-purple-500 to-purple-600'
    }`}>
      {avatar ? (
        <img src={avatar} alt={sender} class="w-8 h-8 rounded-full" />
      ) : (
        <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          {isUser ? (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          ) : (
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          )}
        </svg>
      )}
    </div>
    
    <!-- Message Bubble -->
    <div class={`relative px-4 py-3 rounded-2xl ${
      isUser 
        ? 'bg-blue-600 text-white rounded-br-sm' 
        : 'bg-white border border-slate-200 text-slate-900 rounded-bl-sm shadow-sm'
    }`}>
      
      <!-- Documents (if any) -->
      {documents && documents.length > 0 && (
        <div class="mb-3">
          {documents.map((doc) => {
            const docStyle = getDocumentIcon(doc.type);
            return (
              <div class={`flex items-center p-2 rounded-lg border ${docStyle.color} mb-2 last:mb-0 ${
                isUser ? 'bg-white/90 border-white/60' : ''
              }`}>
                <div class={`w-8 h-8 rounded-lg flex items-center justify-center mr-3 ${
                  isUser ? docStyle.color.split(' ')[1] : docStyle.color.split(' ')[2]
                }`}>
                  <svg class={`w-4 h-4 ${
                    isUser ? docStyle.color.split(' ')[0] : docStyle.color.split(' ')[0]
                  }`} fill="currentColor" viewBox="0 0 24 24">
                    <path d={docStyle.icon} />
                  </svg>
                </div>
                <div class="flex-1 min-w-0">
                  <p class={`text-sm font-semibold truncate ${
                    isUser ? 'text-slate-800' : 'text-slate-800'
                  }`}>
                    {doc.name}
                  </p>
                  {doc.size && (
                    <p class={`text-xs font-medium ${
                      isUser ? 'text-slate-600' : 'text-slate-700'
                    }`}>
                      {doc.size}
                    </p>
                  )}
                </div>
              </div>
            );
          })}
        </div>
      )}
      
      <p class="text-sm leading-relaxed whitespace-pre-wrap" set:html={message}></p>
      
      {timestamp && (
        <p class={`text-xs mt-1 ${
          isUser ? 'text-blue-100' : 'text-slate-500'
        }`}>
          {timestamp}
        </p>
      )}
      
      <!-- Message tail -->
      <div class={`absolute bottom-0 ${
        isUser 
          ? 'right-0 transform translate-x-1 border-l-8 border-l-blue-600 border-b-8 border-b-transparent' 
          : 'left-0 transform -translate-x-1 border-r-8 border-r-white border-b-8 border-b-transparent'
      }`}></div>
    </div>
  </div>
</div>